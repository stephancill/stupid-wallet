---
globs: safari/Resources/*.js
description: Conventions for injected EIP-1193 provider, content script bridge, and background
---

# JS Provider and Extension Conventions

- Inject EIP-1193 provider in MAIN world only (`inject.js`).
- Use strict mode and a self-invoking function; avoid leaking globals.
- Implement only required methods unless specified. Current supported: `eth_requestAccounts`, `eth_accounts`.
- Use `window.postMessage` for requests from page â†’ content script. Do not call `browser.*` or `chrome.*` in MAIN world.
- Content script listens for `{ source: "ios-wallet-inject", method, params, requestId }` and relays to background.
- Background routes methods and may call native; respond with `{ result }` or `{ error }`.
- Responses from content script back to page must include the original `requestId` and `source: "ios-wallet-content"`.
- EIP-6963: dispatch `eip6963:announceProvider` and re-dispatch on `eip6963:requestProvider`. Freeze the detail object.
- Keep provider surface minimal; prefer `request()` over deprecated `send`/`sendAsync`. Include legacy shims if necessary.

Security:

- Never expose private keys to the page. All sensitive operations must be handled by native or trusted extension code.
- Treat SVG icons as data URIs; DApps must render using `<img>`.
